print(inst.kbm, MODE="O")
y<-random.base(inst.kbm)
#prueba<-swap.base.kbm(inst.kbm,y)
a<-swap.base.kbm(x = inst.kbm, new.x = y)
#prueba<-custom.base(inst.kbm,y@base+1)
print(a, MODE="O")
system.time({
sol<-vns.switch(a)
})
print(sol, MODE="O")
vns.switch<-function(rafa.kbm,proporcion=0.8){
base=rafa.kbm@base
bestkbm<-rafa.kbm
for (i in 1:50){
bestBase=switch(bestkbm, proporcion)
##si no mejora, reducimos vecindario
if(all(bestBase==base)){
proporcion=proporcion-0.2
}
#si mejora, volvemos a vecindario grande
else{
##cambiamos de kbm
apoyokbm<-custom.base(bestkbm, bestBase)
nuevokbm<-swap.base.kbm(bestkbm,apoyokbm)
#print('mejora switches')
if(length.kbm(nuevokbm)<length.kbm(bestkbm)){
bestkbm<-nuevokbm
base=bestBase
proporcion=0.8
#print(bestBase)
#print(nuevokbm)
}
else{
proporcion=proporcion-0.2
}
}
if (proporcion<0){
break
}
}
return(bestkbm)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-vns.switch(a)
})
print(sol2, MODE="O")
multiSwitch.R<- function(inst.kbm, comienzos=6){
y<-random.base(inst.kbm)
#prueba<-swap.base.kbm(inst.kbm,y)
a<-swap.base.kbm(x = inst.kbm, new.x = y)
listaBases<-list()
listaItems<-c()
for (i in length(comienzos)){
y<-random.base(inst.kbm)
a<-swap.base.kbm(x = inst.kbm, new.x = y)
listaBases[[i]]<-a
}
for(i in listaBases){
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
print(listaItems)
return (listaBases[[which.min(listaItems)]])
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-vns.switch(a)
})
print(sol2, MODE="O")
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
y<-random.base(inst.kbm)
#prueba<-swap.base.kbm(inst.kbm,y)
a<-swap.base.kbm(x = inst.kbm, new.x = y)
listaBases<-list()
listaItems<-c()
for (i in length(comienzos)){
y<-random.base(inst.kbm)
a<-swap.base.kbm(x = inst.kbm, new.x = y)
listaBases[[i]]<-a
}
for(i in listaBases){
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
print(listaItems)
return (listaBases[[which.min(listaItems)]])
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
sol
sol@base
inst.kbm <- random.kbm( rl=c("D1","D2"), rcl=c(2,2), al=c("A1","A2","A3","A4","A5","A6","A7"), acl=c(2,2,2,2,2,2,2), n=8)
print(inst.kbm, MODE="O")
y<-random.base(inst.kbm)
#prueba<-swap.base.kbm(inst.kbm,y)
a<-swap.base.kbm(x = inst.kbm, new.x = y)
#prueba<-custom.base(inst.kbm,y@base+1)
print(a, MODE="O")
system.time({
sol<-vns.switch(a)
})
print(sol, MODE="O")
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
for (i in length(comienzos)){
y<-random.base(inst.kbm)
listaBases[[i]]<-y
}
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
print(listaItems)
return (listaBases[[which.min(listaItems)]])
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
for (i in length(comienzos)){
y<-random.base(inst.kbm)
listaBases[[i]]<-y
}
print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
print(listaItems)
return (listaBases[[which.min(listaItems)]])
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
print(sol2, MODE="O")
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
for (i in length(comienzos)){
y<-random.base(inst.kbm)
listaBases[[i]]<-y
print('1')
}
print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
print(listaItems)
return (listaBases[[which.min(listaItems)]])
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
for (i in comienzos){
y<-random.base(inst.kbm)
listaBases[[i]]<-y
#print('1')
}
print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
print(listaItems)
return (listaBases[[which.min(listaItems)]])
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
for (i in comienzos){
y<-random.base(inst.kbm)
print(y)
listaBases[[i]]<-y
#print('1')
}
print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
print(listaItems)
return (listaBases[[which.min(listaItems)]])
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
print(inst.kbm)
for (i in comienzos){
y<-random.base(inst.kbm)
print(y)
listaBases[[i]]<-y
#print('1')
}
print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
print(listaItems)
return (listaBases[[which.min(listaItems)]])
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
print(y)
View(y)
print(y@base)
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
print(inst.kbm)
for (i in comienzos){
y<-random.base(inst.kbm)
listaBases[[i]]<-y@base
#print('1')
}
print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
bestBase<-listaBases[[which.min(listaItems)]]
final<-swap.base.kbm(x = inst.kbm, new.x = bestBase)
return (final)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
#print(inst.kbm)
for (i in comienzos){
y<-random.base(inst.kbm)
listaBases[[i]]<-y@base
print(y@base)
}
print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
bestBase<-listaBases[[which.min(listaItems)]]
final<-swap.base.kbm(x = inst.kbm, new.x = bestBase)
return (final)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
inst.kbm <- random.kbm( rl=c("D1","D2"), rcl=c(2,2), al=c("A1","A2","A3","A4","A5","A6","A7"), acl=c(2,2,2,2,2,2,2), n=8)
print(inst.kbm, MODE="O")
y<-random.base(inst.kbm)
print(y@base)
y<-random.base(inst.kbm)
print(y@base)
y<-random.base(inst.kbm)
print(y@base)
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
#print(inst.kbm)
for (i in range(comienzos)){
print(i)
y<-random.base(inst.kbm)
listaBases[[i]]<-y@base
print(y@base)
}
print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
bestBase<-listaBases[[which.min(listaItems)]]
final<-swap.base.kbm(x = inst.kbm, new.x = bestBase)
return (final)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
#print(inst.kbm)
for (i in range(comienzos)){
print(i)
y<-random.base(inst.kbm)
listaBases[[i]]<-y@base
#print(y@base)
}
#print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
bestBase<-listaBases[[which.min(listaItems)]]
final<-swap.base.kbm(x = inst.kbm, new.x = bestBase)
return (final)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
#print(inst.kbm)
for (i in 1:comienzos){
print(i)
y<-random.base(inst.kbm)
listaBases[[i]]<-y@base
#print(y@base)
}
#print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
bestBase<-listaBases[[which.min(listaItems)]]
final<-swap.base.kbm(x = inst.kbm, new.x = bestBase)
return (final)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
#print(inst.kbm)
for (i in 1:comienzos){
y<-random.base(inst.kbm)
listaBases[[i]]<-y@base
print(y@base)
}
#print(listaBases)
for(i in length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
bestBase<-listaBases[[which.min(listaItems)]]
final<-swap.base.kbm(x = inst.kbm, new.x = bestBase)
return (final)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
#print(inst.kbm)
for (i in 1:comienzos){
y<-random.base(inst.kbm)
listaBases[[i]]<-y@base
#print(y@base)
}
#print(listaBases)
for(i in 1:length(listaBases)){
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
bestBase<-listaBases[[which.min(listaItems)]]
final<-swap.base.kbm(x = inst.kbm, new.x = bestBase)
return (final)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
#print(inst.kbm)
for (i in 1:comienzos){
y<-random.base(inst.kbm)
listaBases[[i]]<-y@base
#print(y@base)
}
#print(listaBases)
for(i in 1:length(listaBases)){
print(listaBases[[i]])
a<-swap.base.kbm(x = inst.kbm, new.x = listaBases[[i]])
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
bestBase<-listaBases[[which.min(listaItems)]]
final<-swap.base.kbm(x = inst.kbm, new.x = bestBase)
return (final)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
#print(inst.kbm)
for (i in 1:comienzos){
y<-random.base(inst.kbm)
listaBases[[i]]<-y@base
#print(y@base)
}
#print(listaBases)
for(i in 1:length(listaBases)){
apoyokbm<-custom.base(inst.kbm, listaBases[[i]])
a<-swap.base.kbm(x = inst.kbm, new.x = apoyokbm)
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
bestBase<-listaBases[[which.min(listaItems)]]
final<-swap.base.kbm(x = inst.kbm, new.x = bestBase)
return (final)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
multiSwitch<- function(inst.kbm, comienzos=6){
listaBases<-list()
listaItems<-c()
#print(inst.kbm)
for (i in 1:comienzos){
y<-random.base(inst.kbm)
listaBases[[i]]<-y@base
#print(y@base)
}
#print(listaBases)
for(i in 1:length(listaBases)){
apoyokbm<-custom.base(inst.kbm, listaBases[[i]])
a<-swap.base.kbm(x = inst.kbm, new.x = apoyokbm)
a<-vns.switch(a)
listaBases[[i]]<-a@base
listaItems[[i]]<-length.kbm(a)
}
bestBase<-listaBases[[which.min(listaItems)]]
apoyokbm<-custom.base(inst.kbm, bestBase)
final<-swap.base.kbm(x = inst.kbm, new.x = apoyokbm)
return (final)
}
######################### pruebas VNS multistart Switches
system.time({
sol2<-multiSwitch(a)
})
print(sol2, MODE="O")
print(a)
